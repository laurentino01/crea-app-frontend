                  htmlFor="isAdmin"
                  className="cursor-pointer text-sm text-neutral-800 dark:text-neutral-200 select-none"
                >
                  Administrador
                </label>
              </div>

              <div className="flex justify-end">
                <button
                  type="submit"
                  className="cursor-pointer inline-flex items-center gap-2 bg-fuchsia-900 hover:bg-purple-400 active:bg-fuchsia-950 text-white rounded-md px-4 py-2"
                >
                  Cadastrar
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

      <section className="mt-6">
        {users.length === 0 ? (
          <div className="text-center text-neutral-600 dark:text-neutral-400 py-16">
            Nenhum usuário encontrado.
          </div>
        ) : (
          <>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
              {pageItems.map((u, idx) => {
                const name = u.nomeCompleto || u.apelido;

                return (
                  <Card key={idx}>
                    {/* Header */}
                    <div className="flex items-center gap-3 mb-4">
                      <div className="w-12 h-12 rounded-full flex items-center justify-center font-extrabold text-[18px] text-white ">
                        {<Avatar name={name} />}
                      </div>
                      <div className="flex-1 min-w-0">
                        <div className="font-extrabold mb-1 truncate">
                          {name}
                        </div>

                        {u.isAdm && (
                          <div className="text-sm flex items-center justify-center gap-1 w-[fit-content] bg-violet-200 rounded-full px-2 text-violet-900 ">
                            <Shield size={16} /> Administrador
                          </div>
                        )}
                      </div>
                    </div>

                    {/* Details - vazio como no modelo */}
                    <div className="text-sm text-neutral-500 dark:text-neutral-400 mb-3"></div>

                    {/* Contact */}
                    <div className="flex flex-col gap-2 mb-4">
                      <div className="flex items-center gap-2 text-sm">
                        <i className="fas fa-envelope text-neutral-500" />
                        <Mail size={16} />
                        <span className="truncate">{u.email}</span>
                      </div>
                      <div className="flex items-center gap-2 text-sm">
                        <i className="fas fa-phone text-neutral-500" />
                        <Phone size={16} />
                        <span>(1) 99999-9999</span>
                      </div>
                      <div className="flex items-center gap-2 text-sm">
                        <i className="fas fa-calendar-alt text-neutral-500" />
                        <Calendar size={16} />
                        <span>Desde: {formatDate(u.dataNascimento)}</span>
                      </div>
                    </div>

                    {/* Projects */}
                    <div className="bg-neutral-100 dark:bg-white/5 p-3 rounded-lg mb-4">
                      <div className="text-[13px] text-neutral-500 mb-1">
                        Projetos
                      </div>
                      <div className="font-extrabold text-lg">26</div>
                    </div>

                    {/* Actions */}
                    <div className="flex gap-2">
                      <Link
                        href={`/equipe/${u.id}`}
                        className="px-3 py-2 rounded-full font-bold text-[13px] bg-fuchsia-900 text-neutral-100 transition-colors duration-200  hover:bg-fuchsia-400 active:bg-fuchsia-950 cursor-pointer"
                      >
                        Ver mais
                      </Link>
                    </div>
                  </Card>
                );
              })}
            </div>

            <div className="flex items-center justify-center gap-2 mt-6">
              <button
                className="px-3 py-2 rounded-md border bg-white dark:bg-neutral-900 border-neutral-200 dark:border-neutral-700 text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-800 disabled:opacity-50 cursor-pointer"
                onClick={() => setPage((p) => Math.max(1, p - 1))}
                disabled={page <= 1}
              >
                Anterior
              </button>
              <span className="text-sm text-neutral-600 dark:text-neutral-400">
                Página {page} de {totalPages}
              </span>
              <button
                className="px-3 py-2 rounded-md border bg-white dark:bg-neutral-900 border-neutral-200 dark:border-neutral-700 text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-800 disabled:opacity-50 cursor-pointer"
                onClick={() => setPage((p) => Math.min(totalPages, p + 1))}
                disabled={page >= totalPages}
              >
                Próxima
              </button>
            </div>
          </>
        )}
      </section>
    </>
  );
}
